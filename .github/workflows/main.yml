name: Migrate GitLab to GitHub

on:
  push:
    branches:
      - main
    paths:
      - 'terraform.tfvars'
      # - '*.tf'
      # - 'migrate.bash'  # Trigger if the migrate.bash script is updated

env:
  TF_VERSION: 1.6.0  # Adjust to your preferred Terraform version

jobs:
  migrate:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Needed for Terraform to manage the GitHub repo
      secrets: write   # Needed for creating GitHub Actions secrets

    steps:
      # Checkout the repository containing Terraform files and migrate.bash
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Install Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      # Configure Azure credentials for Terraform
      - name: Setup Azure Credentials
        run: |
          echo "ARM_CLIENT_ID=${{ secrets.AZURE_CLIENT_ID }}" >> $GITHUB_ENV
          echo "ARM_CLIENT_SECRET=${{ secrets.AZURE_CLIENT_SECRET }}" >> $GITHUB_ENV
          echo "ARM_SUBSCRIPTION_ID=${{ secrets.AZURE_SUBSCRIPTION_ID }}" >> $GITHUB_ENV
          echo "ARM_TENANT_ID=${{ secrets.AZURE_TENANT_ID }}" >> $GITHUB_ENV

      # Initialize Terraform with backend
      - name: Terraform Init
        run: terraform init
        env:
          AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

      # Select or create Terraform workspace based on github_repo_name
      - name: Setup Terraform Workspace
        run: |
          terraform workspace select "${{ vars.GITHUB_REPO_NAME }}" || terraform workspace new "${{ vars.GITHUB_REPO_NAME }}"
        env:
          GITHUB_REPO_NAME: ${{ vars.GITHUB_REPO_NAME || 'github_myapp' }}  # Fallback to tfvars value

      # Apply Terraform configuration
      - name: Terraform Apply
        run: terraform apply -auto-approve -var-file=terraform.tfvars
        env:
          TF_VAR_gitlab_token: ${{ secrets.GITLAB_TOKEN }}
          TF_VAR_github_token: ${{ secrets.GITHUB_TOKEN }}
          TF_VAR_AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          TF_VAR_AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          TF_VAR_AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          TF_VAR_AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          TF_VAR_AZURE_CLIENT_OBJECT_ID: ${{ secrets.AZURE_CLIENT_OBJECT_ID }}
